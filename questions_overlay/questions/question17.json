{
    "id": 17,
    "title": "Majority Element",
    "difficulty": "Easy",
    "description": "Given an array `nums` of size `n`, return the majority element. The majority element is the element that appears more than ⌊n / 2⌋ times. Assume that the input array always contains a majority element.",
    "examples": [
        {
            "input": "nums = [3,2,3]",
            "output": "3",
            "explanation": "3 is the majority element as it appears 2 times, which is more than ⌊3 / 2⌋ = 1."
        },
        {
            "input": "nums = [2,2,1,1,1,2,2]",
            "output": "2",
            "explanation": "2 is the majority element as it appears 4 times, which is more than ⌊7 / 2⌋ = 3."
        },
        {
            "input": "nums = [1]",
            "output": "1",
            "explanation": "The single element 1 is the majority element."
        }
    ],
    "constraints": [
        "1 <= nums.length <= 5 * 10^4",
        "-10^9 <= nums[i] <= 10^9",
        "The majority element always exists in the array."
    ],
    "starter_code": {
        "python": "def majority_element(nums):\n    # Write your code here",
        "c_cpp": "// Write your code here",
        "java": "// Write your code here"
    },
    "test_cases": [
        {
            "input": {
                "nums": [3, 2, 3]
            },
            "expected_output": 3
        },
        {
            "input": {
                "nums": [2, 2, 1, 1, 1, 2, 2]
            },
            "expected_output": 2
        },
        {
            "input": {
                "nums": [1]
            },
            "expected_output": 1
        },
        {
            "input": {
                "nums": [5, 5, 5, 5, 1, 2, 3]
            },
            "expected_output": 5
        },
        {
            "input": {
                "nums": [10, 10, 10, 5, 10, 10]
            },
            "expected_output": 10
        }
    ]
}