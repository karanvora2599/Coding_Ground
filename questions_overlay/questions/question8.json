{
    "id": 8,
    "title": "3Sum",
    "difficulty": "Medium",
    "description": "Given an integer array `nums`, return all the triplets `[nums[i], nums[j], nums[k]]` such that `i != j`, `i != k`, and `j != k`, and `nums[i] + nums[j] + nums[k] == 0`. Notice that the solution set must not contain duplicate triplets.",
    "examples": [
        {
            "input": "nums = [-1,0,1,2,-1,-4]",
            "output": "[[-1,-1,2],[-1,0,1]]"
        },
        {
            "input": "nums = []",
            "output": "[]"
        },
        {
            "input": "nums = [0]",
            "output": "[]"
        }
    ],
    "constraints": [
        "0 <= nums.length <= 3000",
        "-10^5 <= nums[i] <= 10^5"
    ],
    "starter_code": {
        "python": "# Write your code here",
        "c_cpp": "// Write your code here",
        "java": "// Write your code here"
    }
}